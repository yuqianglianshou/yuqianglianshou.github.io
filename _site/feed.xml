<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>劉清揚</title>
    <description>欢迎来到我的个人站~</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 23 Oct 2019 22:49:59 +0800</pubDate>
    <lastBuildDate>Wed, 23 Oct 2019 22:49:59 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>我是否跟你一样也喜欢读纸质的书</title>
        <description>&lt;h3 id=&quot;思想行动&quot;&gt;思想，行动&lt;/h3&gt;

&lt;p&gt;不读书的人，精神上永远缺少能量，但凡空闲，只能靠玩游戏，刷剧，睡觉来打发时间。而热爱读书的人，无论被置于何种孤单的境地，都不会丧失最后一个交谈伙伴，那就是自己。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/10/read-book/&quot;&gt; 我是否跟你一样也喜欢读纸质的书  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Oct 2019 00:00:00 +0800</pubDate>
        <link>/2019/10/read-book/</link>
        <guid isPermaLink="true">/2019/10/read-book/</guid>
        
        <category>人生</category>
        
        
      </item>
    
      <item>
        <title>上海迪士尼有感</title>
        <description>&lt;h3 id=&quot;哎呀呀&quot;&gt;哎呀呀&lt;/h3&gt;

&lt;p&gt;我走了，去了一个遥远很遥远的地方，那里的空气中弥漫着芳草的气息，所有的人回到了童年的自己，视线之及，尽是童话世界，没有硝烟，只有欢声，我沉沦了，我沦陷了，我回来了，心却离开了。
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/shanghai/1.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
如果回到了19日早上，我会留出一段时间，重新整理情绪，去掉兴奋，扔掉计划，静静地走，游荡，飘离，欣赏，看匆匆人海，洋溢笑容，洒脱，自然，把手插在裤衣袋中，望，闻，听，去感受，闭上眼，任清风佛面，阳光拍打，就这样，一直走，走过诗意，走到尽头，走来月明，走出星稀，走向向往的自己，那个肆无忌惮的孩童。&lt;br /&gt;
奈何时空总不会完美。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/shanghai/2.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
奈何时间并不够用。我们玩到忘记了劳累，饥饿，以至于一切。我们沉浸其中 不能自己，像大多数一样，一切有顺序的又有目的的进行着。只不过，这片世界中，少了一个空位，多了一个灵魂。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/shanghai/3.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;世界上的童话都是写给大人看的。&lt;br /&gt;
也许，是时候走出童话了吧。&lt;br /&gt;
也许，是时候想想未来了吧。 &lt;br /&gt;
也许，。&lt;/p&gt;

&lt;p&gt;谨以此片留作纪念。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/shanghai/4.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/shanghai/5.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/shanghai/6.jpeg&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/10/shanghai/&quot;&gt; 上海迪士尼有感  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 21 Oct 2019 00:00:00 +0800</pubDate>
        <link>/2019/10/shanghai/</link>
        <guid isPermaLink="true">/2019/10/shanghai/</guid>
        
        <category>人生</category>
        
        
      </item>
    
      <item>
        <title>git 提交代码到GitHub报错</title>
        <description>&lt;h3 id=&quot;劝君立足眼前事荆棘丛中也开花&quot;&gt;劝君立足眼前事，荆棘丛中也开花。&lt;/h3&gt;

&lt;p&gt;qingyang:###.github.io liuqiang$ git push -u origin master
remote: Permission to ###/###.github.io.git denied to ###.
fatal: unable to access ‘https://github.com/####/###.github.io.git/’: The requested URL returned error: 403&lt;/p&gt;

&lt;p&gt;原因是我之前一直用GitHub的A账号登陆提交代码到A的，现在我又申请了一个B账号，打算提交到B账号，
你修改了git仓库的用户名和密码，导致你内存和硬盘中缓存的账号密码不能使用&lt;/p&gt;

&lt;p&gt;1、执行git config –list，查看git的配置信息
图中红色部分内容[user] 为你的git账号配置信息，[credential]为你的这些信息存储位置&lt;/p&gt;

&lt;p&gt;2、执行vim .git-credentials，查看credential中缓存的账户&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/10/git-commit-error/&quot;&gt; git 提交代码到GitHub报错  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 17 Oct 2019 00:00:00 +0800</pubDate>
        <link>/2019/10/git-commit-error/</link>
        <guid isPermaLink="true">/2019/10/git-commit-error/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>JDK 知识点</title>
        <description>&lt;h3 id=&quot;劝君立足眼前事荆棘丛中也开花&quot;&gt;劝君立足眼前事，荆棘丛中也开花。&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;查看 Mac 下已安装的JDK版本以及目录，终端输入
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/libexec/java_home -V
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;（注：-V ，V是大写字母。）
返回：&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;qingyang-c729:~ liuqiang$ /usr/libexec/java_home -V
Matching Java Virtual Machines (1):
1.8.0_211, x86_64:	&quot;Java SE 8&quot;	/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JDK(Java Development Kit) 目录介绍 &lt;br /&gt;
 &lt;strong&gt;bin目录：&lt;/strong&gt;该目录用于存放一些可执行程序，如Java 编译器 javac.exe(加个Windows 下的 .exe 比较好看)，Java 运行工具 java.exe，打包工具 jar.exe，文档生成工具 javadoc.exe。&lt;br /&gt;
 javac.exe 是Java编译器工具，它可以将编写好的Java文件编译成字节码文件（可执行的Java程序）。HelloWorld.java -&amp;gt; HelloWorld.class.&lt;br /&gt;
 java.exe是Java运行工具，它会启动一个Java虚拟机（JVM）进程，Java虚拟机相当于一个虚拟的操作系统，它专门负责运行由Java编译器生成的字节码文件。  &lt;br /&gt;
 &lt;strong&gt;db目录：&lt;/strong&gt;小型数据库。从jdk 6.0开始，Java中引入了一个新的成员 JavaDB，这是一个纯Java 实现、开源的数据库管理系统。这个数据库不仅很轻便，而且支持JDBC 4.0所有的规范，在学习JDBC时，不再需要额外的安装一个数据库软件，选择直接使用JavaDB即可。&lt;br /&gt;
 &lt;strong&gt;jre目录：&lt;/strong&gt;Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境根目录，它包含 Java 虚拟机，运行时的类包、Java 应用启动器以及一个bin目录，但不包含开发环境中的开发工具。&lt;br /&gt;
 &lt;strong&gt;include目录：&lt;/strong&gt;由于jdk是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。
 &lt;strong&gt;lib目录：&lt;/strong&gt;lib是library的缩写，意为Java类库或库文件，是开发工具使用的归档包文件。&lt;br /&gt;
 src.zip文件：是src文件夹的压缩文件，src中防止的是jdk核心类的源代码，通过该文件可以查看 Java基础类的源代码。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;JDK版本变化 &lt;br /&gt;
参考&lt;a href=&quot;http://openjdk.java.net/projects/jdk/&quot;&gt;《openjdk 文档》&lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 1.0&lt;/strong&gt;&lt;br /&gt;
开发代号为Oak（橡树），于1996年1月23发行。特点有：&lt;br /&gt;
提供了一个解释执行的 Java 虚拟机；&lt;br /&gt;
Applet 能在 Mozilla 浏览器中运行。&lt;br /&gt;
Java 的 Applet 能在 Mozilla 浏览器中运行，被看作是未来的互联网语言。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 1.1&lt;/strong&gt;&lt;br /&gt;
于 1997年2月19日发行，新特性有：&lt;br /&gt;
引入JDBC（Java Database Connectivity）；&lt;br /&gt;
支持内部类；&lt;br /&gt;
引入Java Bean；&lt;br /&gt;
引入RMI（Remote Method Invocation）；&lt;br /&gt;
引入反射（仅用于内省）。&lt;br /&gt;
Java 语言的基本形态基本确定了，比如反射 (reflection), JavaBean, 接口和类的关系等等，一直到今天都保持一致。然而，Java 最初的一些目标，如在浏览器中执行 Applet，以及跨平台的图形界面 Awt 很快遭遇到负面的评价。&lt;br /&gt;
&lt;br /&gt; 
&lt;strong&gt;JDK 1.2&lt;/strong&gt;&lt;br /&gt;
开发代号为 Playground（操场），于1998年12月8日发行。新特性有：&lt;br /&gt;
引入集合（Collection）框架；&lt;br /&gt;
对字符串常量做内存映射；&lt;br /&gt;
引入 JIT（Just In Time） 编译器；&lt;br /&gt;
引入对打包的 Java 文件进行数字签名；&lt;br /&gt;
引入控制授权访问系统资源的策略工具；&lt;br /&gt;
引入 JFC（Java Foundation Classes），包括 Swing 1.0、拖放和 Java 2D 类库；&lt;br /&gt;
引入 Java 插件；&lt;br /&gt;
在 JDBC 中引入可滚动结果集、BLOB、CLOB、批量更新和用户自定义类型；&lt;br /&gt;
在 Applet 中添加声音支持。&lt;br /&gt;
Java 第一个里程碑式的版本。JIT（Just in time）编译器技术，使得语言的可迁移性和执行效率达到最优的平衡，同时 Collections 集合类设计优良，在企业应用开发中迅速得到了广泛使用。&lt;br /&gt;
Sun 公司把 Java 技术体系分成三个方向，分别是 J2SE（面向桌面和通用应用开发），J2EE（面向企业级应用开发），J2ME（面向移动终端开发）。这个分类影响非常久远，体现出主流语言设计者的思想：针对于不同的应用领域，在形态，API 集合等进行划分。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 1.3&lt;/strong&gt;&lt;br /&gt;
开发代号为 Kestrel（红隼），于2000年5月08日发行。新特性有：&lt;br /&gt;
引入Java Sound API；&lt;br /&gt;
jar 文件索引；&lt;br /&gt;
对 Java 的各个方面都做了大量优化和增强。&lt;br /&gt;
J2EE 中的 Servlet 规范获得了极大的成功，伴随着互联网的兴起，和浏览器直接通过 HTTP 协议交互的 Servlet，和众多的 MVC 框架，成为 Web1.0 的网红。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 1.4&lt;/strong&gt; &lt;br /&gt;
开发代号为 Merlin（隼），于2004年2月06日发行（首次在JCP下发行）。新特性有:&lt;br /&gt;
XML 处理；&lt;br /&gt;
Java 打印服务；&lt;br /&gt;
引入 Logging API；&lt;br /&gt;
引入 Java Web Start；&lt;br /&gt;
引入 JDBC 3.0 API；&lt;br /&gt;
引入断言；&lt;br /&gt;
引入 Preferences API；&lt;br /&gt;
引入链式异常处理；&lt;br /&gt;
支持 IPv6；&lt;br /&gt;
支持正则表达式；&lt;br /&gt;
引入 Image I/O slot machine API。&lt;br /&gt;
Java 语言真正走向成熟，提供了非常完备的语言特性，如 NIO，正则表达式，XML 处理器等。&lt;br /&gt;
同年微软的.NET 框架发布，两者开始了为期十几年的暗自竞争。从语言特性上来说，.NET 后发先至，一直处于优势。但 Java 依赖良好的开发者生态，绝大多数大型软件公司的使用者众多和不断贡献，以及对 Linux 操作系统良好的支持，渐渐的在服务器端获得优势地位。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 5&lt;/strong&gt;&lt;br /&gt;
开发代号为Tiger（老虎），于2004年9月30日发行。新特性包有:&lt;br /&gt;
引入泛型；&lt;br /&gt;
增强循环，可以使用迭代方式；&lt;br /&gt;
自动装箱与自动拆箱；&lt;br /&gt;
类型安全的枚举；&lt;br /&gt;
可变参数；&lt;br /&gt;
静态引入；&lt;br /&gt;
元数据（注解）；&lt;br /&gt;
引入 Instrumentation。&lt;br /&gt;
Sun 不再采用 J2SE, J2EE 这种命名方式，而使用 Java SE 5, Java EE 5 这样的名称。&lt;br /&gt;
Java 5 是第二个里程碑式的版本。Java 语言语法发生很大的变化，如注解 (Annotation)，装箱 (Autoboxing)，泛型 (Generic)，枚举 (Enum)，foreach 等被加入，提供了 java.util.concurrent 并发包。&lt;br /&gt;
Java 5 对于 Java 语言的推动是巨大的，特别是注解的加入，使得语言定义灵活了很多，程序员可以写出更加符合领域定义的描述性程序。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 6&lt;/strong&gt;&lt;br /&gt;
开发代号为 Mustang（野马），于2006年12月11日发行。新特性有：&lt;br /&gt;
支持脚本语言；&lt;br /&gt;
引入 JDBC 4.0 API；&lt;br /&gt;
引入 Java Compiler API；&lt;br /&gt;
可插拔注解；&lt;br /&gt;
增加对 Native PKI(Public Key Infrastructure)、Java GSS(Generic Security Service)、Kerberos 和 LDAP(Lightweight Directory Access Protocol) 的支持；&lt;br /&gt;
继承 Web Services；&lt;br /&gt;
做了很多优化。&lt;br /&gt;
这个语言语法改进不多，但在虚拟机内部做了大量的改进，成为一个相当成熟稳定的版本，时至今日国内的很多公司依然以 Java6 作为主要 Java 开发版本来使用。&lt;br /&gt;
同年 Sun 公司做出一个伟大的决定，将 Java 开源。OpenJDK 从 Sun JDK 1.7 版本分支出去，成为今天 OpenJDK 的基础。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 7&lt;/strong&gt;&lt;br /&gt;
开发代号是 Dolphin（海豚），于2011年7月28日发行。新特性有：&lt;br /&gt;
switch 语句块中允许以字符串作为分支条件；&lt;br /&gt;
在创建泛型对象时应用类型推断；&lt;br /&gt;
在一个语句块中捕获多种异常；&lt;br /&gt;
支持动态语言；&lt;br /&gt;
支持 try-with-resources；&lt;br /&gt;
引入 Java NIO.2 开发包；&lt;br /&gt;
数值类型可以用2进制字符串表示，并且可以在字符串表示中添加下划线；&lt;br /&gt;
钻石型语法；&lt;br /&gt;
null 值的自动处理。&lt;br /&gt;
这个版本中的主要的特性是 NIO2 和 Fork/Join 并发包，Java 虚拟机的稳定性真正做到的工业级，成为一个计算平台而服务于全世界。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 8&lt;/strong&gt;&lt;br /&gt;
JDK 8 于2014年3月14号发布。从 Java 8 开始开发代号已经弃用了。新特性有:&lt;br /&gt;
Lambda 表达式&lt;br /&gt;
Pipelines 和 Streams&lt;br /&gt;
Date 和 Time API&lt;br /&gt;
Default 方法&lt;br /&gt;
Type 注解&lt;br /&gt;
Nashhorn JavaScript 引擎&lt;br /&gt;
并发计数器&lt;br /&gt;
Parallel 操作&lt;br /&gt;
移除 PermGen Error&lt;br /&gt;
TLS SNI&lt;br /&gt;
第三个有里程碑意义的 Java 版本。其中最引人注目的便是 Lambda 表达式了，从此 Java 语言原生提供了函数式编程能力。  Java 8 更加适应海量云计算的需要。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 9&lt;/strong&gt;&lt;br /&gt;
JDK 9 于2017年9月21日发布。新特性有：&lt;br /&gt;
模块化 —— Jigsaw&lt;br /&gt;
交互式命令行 —— JShell&lt;br /&gt;
默认的垃圾回收器 —— G1&lt;br /&gt;
进程操作改进&lt;br /&gt;
竞争锁的性能优化&lt;br /&gt;
分段代码缓存&lt;br /&gt;
优化字符串占用空间&lt;br /&gt;
这个版本中最引人注目的时候模块化，通过这个工作，可以构建更小的运行时环境，只需要包括Java平台中任务依赖的部分。这可以更好地适应云端的开发。&lt;br /&gt;
&lt;br /&gt;
&lt;strong&gt;JDK 10，11，12，13，14&lt;/strong&gt; &lt;br /&gt;
JDK 10 于2018年3月20日发布。新特性有：&lt;br /&gt;
var声明变量&lt;br /&gt;
移除javah&lt;br /&gt;
IO流大家族添加charset参数&lt;br /&gt;
JVM优化&lt;br /&gt;
HTTPClient转正&lt;br /&gt;
密码学方面的改进&lt;br /&gt;
java命令运行java文件&lt;br /&gt;
废弃Nashorn JavaScript引擎&lt;br /&gt;
JDK12放弃了对JDK6及其以前版本的支持。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/08/java-knowledge/&quot;&gt; JDK 知识点  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 03 Aug 2019 00:00:00 +0800</pubDate>
        <link>/2019/08/jdk-knowledge/</link>
        <guid isPermaLink="true">/2019/08/jdk-knowledge/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>jkeyll 搭建博客</title>
        <description>&lt;h3 id=&quot;just-remember-your-nameno-matter-where-you-are-in-the-worldi-must-and-will-go-to-see-you------miyamizu-mitsuha&quot;&gt;Just remember your name,no matter where you are in the world,I must and will go to see you.      –Miyamizu Mitsuha&lt;/h3&gt;

&lt;p&gt;本文所要达到的效果：通过一个自己申请的域名，打开一个自己维护的博客。&lt;br /&gt;
以下操作是在 mac 环境下，Windows 大同小异。  &lt;br /&gt;
所需条件：&lt;br /&gt;
1，一个自己的域名，本例为 xiongzhoudadi.com&lt;br /&gt;
2，一个自己的 github 账号，本例我的账号是 yuqianglianshou&lt;br /&gt;
3，vs code 工具会用  &lt;br /&gt;
4,Git, Ruby环境安装完毕。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;购买域名&lt;br /&gt;
在阿里云旗下万网平台注册一个账号  &lt;a href=&quot;https://wanwang.aliyun.com/&quot;&gt;https://wanwang.aliyun.com/&lt;/a&gt;  或者 西部数码平台 &lt;a href=&quot;https://www.west.cn&quot;&gt;https://www.west.cn&lt;/a&gt;，以万网为例，打开链接，&lt;img src=&quot;/images/posts/jekyll_blog/wanwang1.png&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
&lt;br /&gt;
搜索想要的域名，没有被注册就可以花钱注册了，一般几块到几十每年，下单购买就好了。买好后先放着。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Jekyll 新建博客项目&lt;br /&gt;
打开终端，进入到一个想要创建项目的目录（可以是临时目录，一会用完会删除）
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd documents
cd github
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;新建项目(项目名字可以随意，myBlog)&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myBlog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;新建执行完后用 vs code 打开项目，使用 command+shift+y 快捷键打开 vs code 的命令行 ,执行&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;当vs code 命令行中看到 Server address:http://127.0.0.1:4000  Server running 之后，打开浏览器，输入所给地址，即可看到刚刚建好的博客样例（一个简单的官方demo，需要改成我的 blog 这样的我会在写一篇文章）。
&lt;br /&gt;
&lt;img src=&quot;/images/posts/jekyll_blog/image1.png&quot; alt=&quot;&quot; /&gt; 
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;github 创建仓库&lt;br /&gt;
登陆你的 github 账号，然后创建一个跟你账户名一样的仓库，如我的 github 账户名叫 yuqianglianshou，我的 github 仓库名就叫 yuqianglianshou.github.io。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;提交项目 myBlog 到github&lt;br /&gt;
在GitHub创建的仓库上(yuqianglianshou.github.io) 点击 Clone or dowload 会出现一个地址(https://github.com/yuqianglianshou/yuqianglianshou.github.io.git )，copy这个地址备用。
打开终端，进入到你想要创建项目的位置(将来博客项目存放的位置)，执行
git clone https://github.com/yuqianglianshou/yuqianglianshou.github.io.git&lt;br /&gt;
此时出现的文件夹（yuqianglianshou.github.io）就是你的GitHub上创建的项目了，然后把刚才建立的 myBlog 项目中的所有文件复制到你本地的 yuqianglianshou.github.io 仓库中（myBlog可以删了），然后提交到GitHub服务端，
终端进入仓库目录
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd yuqianglianshou.github.io
git add .
git commit -m &quot;初始化&quot;
git push -u origin master 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;提交成功后，在浏览器里输入 yuqianglianshou.github.io ，就可以访问你的博客了。此时的 yuqianglianshou.github.io 就相当于博客网站的域名。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;修改域名指向，域名解析&lt;br /&gt;
登陆github账号，打开 yuqianglianshou.github.io 的项目，选择setting，找到
Custom domain
Custom domains allow you to serve your site from a domain other than yuqianglianshou.github.io. Learn more.
下面输入你买的域名，xiongzhoudadi.com ,点击save。
&lt;br /&gt;
&lt;img src=&quot;/images/posts/jekyll_blog/github.png&quot; alt=&quot;&quot; /&gt; 
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;登入阿里云（你购买域名的平台），域名后面点击解析，
&lt;br /&gt;
&lt;img src=&quot;/images/posts/jekyll_blog/wanwang2.png&quot; alt=&quot;&quot; /&gt; 
&lt;br /&gt;
添加记录，记录类型选择CNAME,主机记录填入www,解析路线默认，记录值 填入 yuqianglianshou.github.com ，TTL 默认值10分钟。保存，10分钟后就会生效。此时www.xiongzhoudadi.com就可以使用了。
再次添加一个记录，将主机记录写为 @ ，其他与上一个一样，这样 直接 访问 xiongzhoudadi.com 也可以了，（去掉了www）。
&lt;br /&gt;
&lt;img src=&quot;/images/posts/jekyll_blog/wanwang3.png&quot; alt=&quot;&quot; /&gt; 
&lt;br /&gt;
&lt;img src=&quot;/images/posts/jekyll_blog/wanwang4.png&quot; alt=&quot;&quot; /&gt; 
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;至此，可以通过自己注册的域名访问自己的博客了。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/07/jekyll-blog/&quot;&gt; jkeyll 搭建博客 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 07 Jul 2019 00:00:00 +0800</pubDate>
        <link>/2019/07/jekyll-blog/</link>
        <guid isPermaLink="true">/2019/07/jekyll-blog/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>ionic 项目 运行 ionic serve（Windows）</title>
        <description>&lt;h3 id=&quot;最好的礼物做自己&quot;&gt;最好的礼物，做自己。&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;下载node&lt;br /&gt;
nodejs 下载页面 &lt;a href=&quot;https://nodejs.org/download/release/&quot;&gt;https://nodejs.org/download/release/&lt;/a&gt; ，选择一个版本，比如我的选择是 v11.14.0,点进去，选择 node-v11.14.0-win-x64.zip 下载，直通车&lt;a href=&quot;https://nodejs.org/download/release/v11.14.0/node-v11.14.0-win-x64.zip&quot;&gt;https://nodejs.org/download/release/v11.14.0/node-v11.14.0-win-x64.zip&lt;/a&gt; 
解压到你的程序目录，比如我的是D:/ProgramFiles/nodejs,此时若打开cmd进入到当前D:/ProgramFiles/nodejs目录，输入
&lt;code class=&quot;highlighter-rouge&quot;&gt;node -v&lt;/code&gt;回车，&lt;code class=&quot;highlighter-rouge&quot;&gt;npm -v&lt;/code&gt;都会有版本信息。&lt;/li&gt;
  &lt;li&gt;配置 npm 环境变量&lt;br /&gt;
打开环境变量配置，新建系统变量 NPM_HOME =  D:/ProgramFiles/nodejs&lt;br /&gt;
系统变量 path 追加 &lt;code class=&quot;highlighter-rouge&quot;&gt;;%NPM_HOME%&lt;/code&gt; (注意有一分号)&lt;br /&gt;
重新打开新的cmd窗口（注意：环境变量修改需重新开启cmd生效），执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;node -v&lt;/code&gt; 出现版本信息，配置成功。&lt;/li&gt;
  &lt;li&gt;安装 ionic、cordova、node-sass &lt;br /&gt;
命令行执行
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; npm install -g ionic  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;-g 代表全局安装，一定要有 -g，不然会在你当前cmd所在的目录生成一个node-modules文件夹，经测试并无任何卵用。这时由于第一次执行或者网络问题会安装失败，再次执行安装命令。安装成功后 D:/ProgramFiles/nodejs/ 下 多出 ionic 和 ionic.cmd 两个文件，D:/ProgramFiles/nodejs/node_modules/ 下 多出 ionic 文件夹，执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;ionic -v&lt;/code&gt; 查看版本信息。同理执行&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g cordova 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;安装Cordova，&lt;code class=&quot;highlighter-rouge&quot;&gt;cordova -v&lt;/code&gt;查看版本，&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g node-sass 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;安装 node-sass,&lt;code class=&quot;highlighter-rouge&quot;&gt;node-sass -v&lt;/code&gt; 查看版本。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;VSCode打开项目，终端执行ionic serve 报错
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ionic-app-scripts has unexpectedly closed (exit code 1).  
The Ionic CLI will exit. Please check any output above for error details.  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;终端执行&lt;/p&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install @ionic/app-scripts@latest --save-dev  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;如果中间出现 EXIST app-scripts 的错误，需要进入到项目目录，找到 node-modules/.bin/ionic-app-scripts 文件，删除，找到node-modules/@ionic/app-scripts 文件夹，删除，然后再次执行 npm install @ionic/app-scripts@latest –save-dev ，安装成功。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;到这基本差不多了，执行&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install &lt;/code&gt;
如果没报错，执行&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;ionic serve &lt;/code&gt;
浏览器成功打开项目。&lt;/li&gt;
  &lt;li&gt;附图&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/ionicserve/downloadnodejs.png&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
&lt;br /&gt; 
&lt;br /&gt; 
&lt;img src=&quot;/images/posts/ionicserve/2.png&quot; alt=&quot;&quot; /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;img src=&quot;/images/posts/ionicserve/3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/07/ionic-serve/&quot;&gt; ionic 项目 运行 ionic serve（Windows） &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Thu, 04 Jul 2019 00:00:00 +0800</pubDate>
        <link>/2019/07/ionic-serve/</link>
        <guid isPermaLink="true">/2019/07/ionic-serve/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>mac 上安装破解 Matlab</title>
        <description>&lt;h3 id=&quot;祝你能够再次遇到那个值得你奋斗一生的人&quot;&gt;祝你能够再次遇到，那个值得你奋斗一生的人。&lt;/h3&gt;

&lt;p&gt;版本：   &lt;br /&gt;
MATLAB 2014 b&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;下载安装文件 Matlab.zip 和 破解文件压缩包 MATLAB_R2014B_MAC_LINUX_crack.zip 。&lt;br /&gt;
//Matlab.zip &lt;br /&gt;
//MATLAB_R2014B_MAC_LINUX_crack.zip  &lt;br /&gt;
文件太大，github上不让放，请加QQ：2465199797.注明获取Matlab安装文件。&lt;/li&gt;
  &lt;li&gt;解压  MATLAB_R2014B_MAC_LINUX_crack.zip ，其中包含三个文件:KEY 2014b.txt 里面是文件安装密钥 29797-39064-48306-32452；libmwservices.dylib;license.lic;&lt;/li&gt;
  &lt;li&gt;解压Matlab.zip， 双击 Matlab/intall 文件，弹出命令行和安装程序，选择使用文件安装密钥-&amp;gt;下一步-&amp;gt;接受许可协议-&amp;gt;下一步-&amp;gt;选择我已有文件安装密钥，将MATLAB_R2014B_MAC_LINUX_crack/KEY 2014b.txt 中的密钥即 29797-39064-48306-32452 复制粘贴上去 -&amp;gt;下一步-&amp;gt;选择安装文件夹，默认为/Applications ,不需要修改-&amp;gt;点击下一步-&amp;gt;选择安装的产品，默认即可，继续下一步，安装完成。&lt;/li&gt;
  &lt;li&gt;替换本机中的 libmwservices.dylib：打开访达，点击 应用程序，找到刚刚安装的 MATLAB_R2014b 图标，右击选择显示包内容，依次打开 bin–&amp;gt;maci64，用破解文件中的MATLAB_R2014B_MAC_LINUX_crack/libmwservices.dylib 替换此目录下的同名文件即可。&lt;/li&gt;
  &lt;li&gt;双击启动图标。提示激活，选择 破解文件中的MATLAB_R2014B_MAC_LINUX_crack/license.lic 文件进行激活，激活完毕，亲测软件可用。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/06/matlab-for-mac/&quot;&gt; mac 上安装破解 Matlab &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 23 Jun 2019 00:00:00 +0800</pubDate>
        <link>/2019/06/matlab-for-mac/</link>
        <guid isPermaLink="true">/2019/06/matlab-for-mac/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>Kotlin 爬个数据</title>
        <description>&lt;h3 id=&quot;可能知道的多了快乐就少了&quot;&gt;可能知道的多了，快乐就少了。&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;学习 Kotlin 时，被它的爬虫项目实战吸引了，&lt;a href=&quot;https://lixiaojun.xin/static/courses/kotlin/&quot;&gt;https://lixiaojun.xin/static/courses/kotlin/&lt;/a&gt;，然而并没有看到demo实例，遂写之，&lt;a href=&quot;https://github.com/yuqianglianshou/KotlinParser&quot;&gt;yuqianglianshou/KotlinParser&lt;/a&gt; 。&lt;/li&gt;
  &lt;li&gt;IDE:IntelliJ IDEA.&lt;br /&gt;
网页解析库：compile ‘org.jsoup:jsoup:1.12.1’&lt;br /&gt;
IP地址代理服务：&lt;a href=&quot;http://www.qydaili.com/free/&quot;&gt;旗云代理&lt;/a&gt;&lt;br /&gt;
爬取的目标网站：&lt;a href=&quot;http://quotes.toscrape.com/&quot;&gt;http://quotes.toscrape.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;主线：通过网页解析库jsoup获取旗云代理网页数据，提取前5页代理IP及端口号；随机取一个代理IP和端口号，获取目标网站前5页的数据，由于代理IP不稳定或响应时间长或网不好等等，会有失败情况甚至大量失败情况发生，程序重复此过程直至成功，然后提取我们想要的名人名言数据；输出到控制台；输出txt文件到项目根目录。&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;/images/posts/kotlin_parser/1.png&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
&lt;img src=&quot;/images/posts/kotlin_parser/2.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/06/kotlin_parser/&quot;&gt; Kotlin 爬个数据 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Jun 2019 00:00:00 +0800</pubDate>
        <link>/2019/06/kotlin_parser/</link>
        <guid isPermaLink="true">/2019/06/kotlin_parser/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>蛙，跳一跳哈</title>
        <description>&lt;h3 id=&quot;如果未曾见过天鹅我本可以了此残生&quot;&gt;如果未曾见过天鹅，我本可以了此残生。&lt;/h3&gt;

&lt;h4 id=&quot;以下摘自维基百科&quot;&gt;以下摘自维基百科&lt;/h4&gt;
&lt;p&gt;1，&lt;br /&gt;
防火长城[1]（英语：Great Firewall，常用简称：GFW，中文也称中国国家防火墙[2]，中国大陆民众俗称墙、防火墙、功夫网[3]等等），是对中华人民共和国政府在其互联网边界审查系统（包括相关行政审查系统）的统称。此系统起步于1998年[4]，其英文名称得自于2002年5月17日Charles R. Smith所写的一篇关于中国网络审查的文章《The Great Firewall of China》[5]，取与Great Wall（长城）相谐的效果，简写为Great Firewall，缩写GFW[6]。随着使用的拓广，中文“墙”和英文“GFW”有时也被用作动词，网友所说的“被墙”即指网站内容被防火长城所屏蔽或者指服务器的通讯被封阻，“翻墙”也被引申为突破网络审查浏览境内外被屏蔽的网站或使用服务的行为。&lt;br /&gt;
2，&lt;br /&gt;
突破网络审查或突破网络封锁，俗称翻墙[1][2]、穿墙、爬墙、科学上网、魔法上网、爱国上网、自由上网、正常上网等。由于“翻墙”在中国大陆境内成为敏感词汇，现在更多的使用科学上网来代替“翻墙”，通常特指在中国大陆绕过互联网审查封锁技术（IP封锁、端口封锁、关键词过滤、域名劫持等），突破防火长城，实现对网络内容的访问。&lt;br /&gt;
3，&lt;br /&gt;
突破网络审查的软件通常被称作翻墙软件，俗称梯子。翻墙软件并不只是VPN、代理软件。它们着眼于获得被屏蔽的网站内容，并在访问受限网站时向ISP隐藏自己的真实地址信息。&lt;br /&gt;
4，&lt;br /&gt;
想了解 BandwagonHost（搬瓦工）、Shadowsocks 是什么的请点击链接 &lt;a href=&quot;http://www.apkbus.com/blog-864937-77168.html&quot;&gt;http://www.apkbus.com/blog-864937-77168.html&lt;/a&gt;  包含 GFW 工作方式图文。&lt;br /&gt;
5，&lt;br /&gt;
如果想用搬瓦工搭建服务器，下面的几个地址你将会用到&lt;br /&gt;
&lt;a href=&quot;https://www.bandwagonhost.net/&quot;&gt;bandwagonhost中文网&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://kiwivm.64clouds.com/main-exec.php?mode=extras_shadowsocks&quot;&gt;搬瓦工一键安装Shadowsocks&lt;/a&gt;&lt;br /&gt;
关于Shadowsocks客户端下载，建议在github上搜索Shadowsocks去下载。&lt;br /&gt;
6,&lt;br /&gt;
友情提示：&lt;/p&gt;

&lt;p&gt;因提供翻墙服务而获刑&lt;br /&gt;
近年来已有多人因提供翻墙工具和服务而遭到公安机关逮捕，受到处罚甚至被起诉获刑。例如：&lt;/p&gt;

&lt;p&gt;2016年8月24日东莞居民邓杰威遭公安机关逮捕，并被东莞市人民检察院以犯提供侵入、非法控制计算机信息系统程序、工具罪向东莞市第一人民法院提起公诉，一审判处有期徒刑九个月。判决书中写道：”经鉴定，被告人邓杰威的ShadowsocksR-dotnet4.0.exe软件可以访问国内（大陆地区）IP不能访问的外国网站。……被告人邓杰威的作案时间长，影响范围广，其犯罪情节不属轻微，社会危害性较大。”[87][88]
2017年9月，在南京某网络企业从事软件开发工作的赵某，因向他人出售翻墙服务，被南京浦口警方根据《中华人民共和国网络安全法》的有关规定处以行政拘留3天、没收违法所得共计1,080元的处罚。[89][90]&lt;br /&gt;
2017年10月，无锡新吴警方拘捕包某等3名翻墙软件”云梯VPN”制售团队成员，并将“云梯VPN”所有服务器连接切断[91]&lt;br /&gt;
2013年至2017年6月期间，吴向洋在网上搭建VPN服务器并提供会员账号和登陆软件，该软件登录后可以浏览境外网站，另外吴向洋还把一些VPN会员账号密码写到硬件路由器上，使得修改过的路由器能够直接登录VPN，实现能够收听境外网站音视频节目的功能。之后吴向洋利用“淘宝网”开设网店，以及在互联网开设“凡狗VPN”网站等方式，向一般用户出租或销售VPN软件、VPN路由器硬件，交易数千次，经营额达792638元,获利约50余万元。2017年10月，广西壮族自治区平南县检察院以涉嫌非法经营罪批准逮捕犯罪嫌疑人吴向洋并移送审查起诉[92],最终吴向洋因非法经营罪被法院判决有期徒刑五年六个月,并处罚金人民币五十万元[93]。&lt;br /&gt;
2016年夏天起，河南网民刘冰洋开始提供基于Shadowsocks的翻墙服务。2017年3月30日被河南省新野县公安局逮捕。“截至案发，被告人刘冰洋共购买、搭建境外代理服务器55个，发展客户共计4091个，非法获利342635元（其中，美元汇率按6.90元、港币汇率按0.89元折算）”。2017年12月28日，刘冰洋被河南省新野县人民法院一审以提供侵入、非法控制计算机信息系统的程序、工具罪判处有期徒刑三年，缓刑五年，罚金100000元，并没收300000元。[94]&lt;br /&gt;
2018年，岳阳人王某、孙某、欧阳某在网上销售能提供翻墙服务的名为“粒子云加速器”的VPN软件。同年4月，销售软件行为被岳阳县公安局网技大队发现。同年5月，岳阳警方在岳阳市区抓捕王某、孙某和欧阳某三人并将其行政拘留。截至被捕时，三人共向26人次销售了VPN软件，获利近千元[95]。&lt;br /&gt;
在某证券管理公司从事软件开发工作的戴某，自2016年4月起，创建网站，并在网站上出售VPN翻墙软件的账户。同时租用中国境外服务商的多台服务器，向所出售的账户提供可以访问中国IP不能访问的外国网站服务。戴某于2017年10月10日被抓获，截至2017年10月案发，戴某共计向数百人次提供VPN服务。在法院审理期间，戴某退还盈利所得人民币1万元。2018年10月，上海市宝山区人民法院宣判戴某提供侵入、非法控制计算机信息系统程序、工具罪一案，判处有期徒刑三年，缓刑三年，并处罚金人民币一万元[96]。&lt;br /&gt;
钟祥市人刘小康在Shadowsocks基础上自主开发，自2017年1月起以名为“天眼通”的网站向网民提供翻墙服务。同年10月13日，刘小康被刑事拘留，11月15日被逮捕。判决书写到，被告人刘小康非法获利2662280.26元。湖北省咸宁市咸安区人民法院于2019年1月29日判决刘小康有期徒刑三年，缓刑四年，并处罚金500000元，没收全部违法所得。[97]&lt;/p&gt;

&lt;p&gt;因翻墙而受到处罚&lt;br /&gt;
除提供翻墙工具和服务以外，翻墙行为本身也有可能会招致惩罚。例如2019年1月4日，广东韶关市公安局发布信息指控当地市民朱某“擅自创建、使用非法定信道进行国际联网”，对其处以警告并罚款1000元。另外一份印有重庆市荣昌区公安局公章的《被传唤人家属通知书》显示了对重庆网民黄某的处罚。[98]&lt;br /&gt;
7，&lt;br /&gt;
洋葱路由（英语：Onion routing）为一种在计算机网络上匿名沟通的技术。在洋葱路由的网络中，消息一层一层的加密包装成像洋葱一样的数据包，并经由一系列被称作洋葱路由器的网络节点发送，每经过一个洋葱路由器会将数据包的最外层解密，直至目的地时将最后一层解密，目的地因而能获得原始消息。而因为透过这一系列的加密包装，每一个网络节点（包含目的地）都只能知道上一个节点的位置，但无法知道整个发送路径以及原发送者的地址。[1]&lt;br /&gt;
8，&lt;br /&gt;
暗网（英语：Dark web）是存在于黑暗网络、覆盖网络上的万维网内容，只能用特殊软件、特殊授权、或对计算机做特殊设置才能访问[1][2]。暗网构成了深网的一小部分，深网网络没有被网络搜索引擎索引，有时“深网”这一术语被错误地用于指代暗网[3][4][5][6][7]。&lt;/p&gt;

&lt;p&gt;构成暗网的黑暗网络包括F2F的小型点对点网络以及由公共组织和个人运营的大型流行网络，如Tor、自由网、I2P和Riffle。暗网用户基于常规网络未加密的性质将其称为明网[8]。Tor暗网可以称为洋葱区域（onionland）[9]，其使用网络顶级域后缀.onion和洋葱路由的流量匿名化技术。&lt;br /&gt;
9，&lt;br /&gt;
深网，即深层网络（英语：Deep web），又称：不可见网、隐藏网，是指不能被标准搜索引擎索引的万维网内容。与深网相反的术语是表网，任何人都可以使用互联网访问。&lt;/p&gt;

&lt;p&gt;深网的内容隐藏在HTTP窗体后面，包括许多非常常见的用途，如网络邮件、网络银行和用户必须付费的服务，这些内容受到付费墙的保护，如视频点播、一些网络杂志和报纸等。&lt;br /&gt;
10，&lt;br /&gt;
Tor是实现匿名通信的自由软件。其名源于“The Onion Router”（洋葱路由器）的英语缩写[9][10]。用户可透过Tor接达由全球志愿者免费提供，包含7000+个中继的覆盖网络[11]，从而达至隐藏用户真实地址、避免网络监控及流量分析的目的。Tor用户的互联网活动（包括浏览在线网站、帖子以及即时消息等通信形式）相对较难追踪[12]。Tor的设计原意在于保障用户的个人隐私，以及不受监控地进行秘密通信的自由和能力。&lt;/p&gt;

&lt;p&gt;Tor不会阻止在线网站判断用户是否通过Tor访问该网站。尽管它保护用户的隐私，但却不会掩饰用户正在使用Tor这一事实。有些网站会对使用Tor的用户进行限制。MediaWiki的扩展Torblock便是其中一个例子，其能自动地限制透过Tor进行的编辑。而使用了Torblock的维基百科则容许用户在某些情况下透过Tor编辑其内容[13]。&lt;/p&gt;

&lt;p&gt;Tor透过在5层协议栈中的应用层进行加密，从而实现洋葱路由这一种技术。Tor会对包括下一个节点的IP地址在内的数据，进行多次加密，并透过虚拟电路（包括随机选择的Tor节点）将其提交。每个中继都会对一层加密的数据进行解密，以知道数据的下一个发送目的地，然后将剩余的加密数据发送给它。最后的中继会解密最内层的加密数据，并在不会泄露或得知源IP地址的情况下，将原始数据发送至目标地址。[14]&lt;/p&gt;

&lt;p&gt;攻击者可能会尝试透过某些手段来使Tor用户去匿名化。包括利用Tor用户计算机上的软件漏洞[15]。美国国家安全局拥有针对Tor安装包中所捆绑的旧版本Firefox漏洞的技术（代号“EgotisticalGiraffe”）[16]，并曾利用XKeyscore系统来密切监控Tor用户[17]。不少学者亦就如何破解Tor网络进行过学术研究[18][19]，此一行为受到Tor项目公司所肯定[20]。&lt;/p&gt;

&lt;p&gt;开发及维护Tor所需的一大部分费用由美国联邦政府所捐助[21]，过去则以海军研究办公室及国防高等研究计划署的名义捐助[22]。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/05/knowledge-point/&quot;&gt; 蛙，跳一跳哈  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 26 May 2019 00:00:00 +0800</pubDate>
        <link>/2019/05/knowledge-point/</link>
        <guid isPermaLink="true">/2019/05/knowledge-point/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>Android实现小视频的录制和预览，界面和功能靠拢微信。</title>
        <description>&lt;h3 id=&quot;不过是看淡利益看穿时间推己及人&quot;&gt;不过是看淡利益，看穿时间，推己及人。&lt;/h3&gt;

&lt;p&gt;先看一下效果图： 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;img src=&quot;/images/posts/record_video/recordvideo2.jpeg&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
&lt;br /&gt; 
&lt;img src=&quot;/images/posts/record_video/recordvideo1.jpeg&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
&lt;br /&gt; 
&lt;img src=&quot;/images/posts/record_video/recordvideo3.jpeg&quot; alt=&quot;&quot; /&gt; &lt;br /&gt;
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;1，实现的功能&lt;/p&gt;

&lt;p&gt;a)全屏幕预览录制播放。&lt;br /&gt;
b)录制时间可定制（本实例15秒），录制按钮动画效果。&lt;br /&gt;
c)录制完成即刻播放，可保存删除文件。&lt;br /&gt;
d)录制按钮可以随意拖动复位。&lt;/p&gt;

&lt;p&gt;2，可拓展的功能&lt;/p&gt;

&lt;p&gt;a)可添加点击拍照功能。&lt;br /&gt;
b)可添加开关闪关灯功能。&lt;br /&gt;
c)对焦功能。（缺陷）&lt;br /&gt;
d)可添加播放暂停功能。&lt;br /&gt;
e)可分段录制，拼接视屏。&lt;/p&gt;

&lt;p&gt;3，未实现的微信效果&lt;/p&gt;

&lt;p&gt;a)录制视频时，拖动录制按钮实现焦距调整。&lt;br /&gt;
b)视频压缩。&lt;/p&gt;

&lt;p&gt;4，注意事项&lt;/p&gt;

&lt;p&gt;a)本例以goole官方Camera2视频录制demo为原型修改，链接如下&lt;br /&gt;
 &lt;a href=&quot;https://github.com/googlesamples/android-Camera2Video&quot;&gt;googlesamples/android-Camera2Video&lt;/a&gt;&lt;br /&gt;
 API Camera2,minSdkVersion 21，支持5.0以上。&lt;br /&gt;
b)自定义view 录制button 摘自
&lt;a href=&quot;https://github.com/Zhaoss/WeiXinRecordedDemo&quot;&gt;Zhaoss/WeiXinRecordedDemo&lt;/a&gt;&lt;br /&gt;
此实例是基于ffmpeg的视频录制编辑，功能很强大，但是其中的 libutility.so 年代过于久远，android6.0以上启动调用时会给出 
Detected problems with app native libraries (please consult log for detail):libutility.so:text relocations  这个错误提示，是由于 .so 包的问题，作者表示解决不了，我去官网查过，好多年没有更新维护的动态了。但是关闭错误的dialog是可以使用的，视频的拼接 涂鸦 压缩 等等都是支持的。&lt;br /&gt;
c)SurfaceView尺寸、Previewsize 、Picturesize 的选择方式。原则是比例一致，选择屏幕尺寸大小，期间有一些问题，demo中有详细注释。&lt;/p&gt;

&lt;p&gt;5，demo github 链接&lt;br /&gt;
&lt;a href=&quot;https://github.com/yuqianglianshou/RecordVideoDemo&quot;&gt;yuqianglianshou/RecordVideoDemo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://xiongzhoudadi.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://xiongzhoudadi.com/2019/05/record_view/&quot;&gt; Android实现小视频的录制和预览，界面和功能靠拢微信。 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Tue, 21 May 2019 00:00:00 +0800</pubDate>
        <link>/2019/05/record_view/</link>
        <guid isPermaLink="true">/2019/05/record_view/</guid>
        
        <category>技术</category>
        
        
      </item>
    
  </channel>
</rss>
