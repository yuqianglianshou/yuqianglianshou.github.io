<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>劉清揚</title>
    <description>欢迎来到我的个人站~</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 28 Dec 2020 09:20:55 +0800</pubDate>
    <lastBuildDate>Mon, 28 Dec 2020 09:20:55 +0800</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Android 关于使用 azhon/AppUpdate 的一点想法</title>
        <description>&lt;h3 id=&quot;莲出淤泥而不染但你忘了藕是它身体的一部分&quot;&gt;莲出淤泥而不染，但你忘了，藕是它身体的一部分。&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yuqianglianshou/AppUpdate&quot;&gt;本demo地址 https://github.com/yuqianglianshou/AppUpdate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最近使用了一个不错的版本更新库，&lt;a href=&quot;https://github.com/azhon/AppUpdate&quot;&gt;azhon/AppUpdate&lt;/a&gt; ，使用中关于强制更新遇到了两个偏激的需求，大概描述为&lt;br /&gt;
1:检测到有新版本需要更新时弹出更新提示窗，正常情况用户看到弹窗点击更新就可以了，我要实现的效果是弹出更新自动开始下载，去掉用户点击更新的操作，实现方法是代码模拟点击事件代替。 &lt;br /&gt;
2:有2个应用，我们称为A应用和B应用，A运行后检测手机中安装的B是否有新版，如果有，则强制更新B，这个可以实现，但是会有一个问题，更新完B以后A中的更新弹窗是不会消失的，而此时又是强制更新，所以A应用界面卡在这里了。原因是按照正常的逻辑A应该更新A，更新后A重新打开，所以并不需要也不应该在A没有更新之前关闭弹窗，而此时我们是用A更新的B，所以缺少了一步 B更新后关闭A中更新弹窗的步骤。实现思路是广播监听B的安装或更新，回调dialog的关闭方法。&lt;/p&gt;

&lt;p&gt;运行如下图所示：&lt;br /&gt;
检测到更新后
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/android_appupdate/1.jpeg&quot; alt=&quot;&quot; width=&quot;40%&quot; height=&quot;40%&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
安装了B之后A的日志
&lt;br /&gt;
&lt;img src=&quot;/images/posts/android_appupdate/2.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;关键代码：
&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class MainActivity : AppCompatActivity() {

    //此url 是 ES文件浏览器 apk的下载地址，包名 为 com.estrongs.android.pop
    private val url =
        &quot;https://imtt.dd.qq.com/16891/apk/FA48766BA12A41A1D619CB4B152889C6.apk?fsname=com.estrongs.android.pop_4.2.3.3_10089.apk&amp;amp;csr=1bbd&quot;

    lateinit var receiver: AppInstallReceiver
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        //需动态注册广播接受者，Android8.0静态注册失效
        receiver = AppInstallReceiver()
        val filter = IntentFilter()
        filter.addAction(Intent.ACTION_PACKAGE_REMOVED);
        filter.addAction(Intent.ACTION_PACKAGE_REPLACED);
        filter.addAction(Intent.ACTION_PACKAGE_ADDED);
        filter.addDataScheme(&quot;package&quot;);

        registerReceiver(receiver, filter)


        //当安装了之后 AppInstallReceiver 收到广播，在receiver中调用关闭 强制更新窗口
        button.setOnClickListener {
            AppUpdateUtils.startUpdate(
                this,
                url,
                &quot;ES文件浏览器.apk&quot;,
                &quot;2.0&quot;,
                2,
                &quot;有新版啦\n强制更新\n问世间情为何物\n直教人生死相许&quot;,
                true
            )
        }
    }

    override fun onDestroy() {
        unregisterReceiver(receiver)
        super.onDestroy()
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;object AppUpdateUtils {


    //记录 弹窗实例 对象，用于主动关闭
    lateinit var updateDialog: UpdateDialog

    /**
     * 检查需要更新后调用
     * 强制升级
     */
    fun startUpdate(
        mContext: Context,
        updateUrl: String,
        apkName: String,
        apkVersionName: String,
        apkVersionCode: Int,
        desMsg: String,
        isForce: Boolean
    ) {
        /*
         * 整个库允许配置的内容
         * 非必选
         */
        val configuration = UpdateConfiguration()
            //输出错误日志
            .setEnableLog(true)
            //下载完成自动跳动安装页:
            .setJumpInstallPage(true)
            //设置按钮的文字颜色
            .setDialogButtonTextColor(Color.WHITE)
            //设置是否显示通知栏进度
            .setShowNotification(!isForce)
            //设置是否提示后台下载toast
            .setShowBgdToast(!isForce)
            //设置强制更新
            .setForcedUpgrade(isForce)

        var manager = DownloadManager.getInstance(mContext)
        manager.setApkName(apkName)
            .setApkUrl(updateUrl)
            .setShowNewerToast(true)
            .setSmallIcon(R.mipmap.ic_launcher)
            .setConfiguration(configuration)
            .setApkVersionCode(apkVersionCode)
            .setApkVersionName(apkVersionName)
            .setApkDescription(desMsg)
            .download()

        //记录 弹窗实例 对象，用于主动关闭
        updateDialog = manager.defaultDialog

        if (isForce) {
            //拿到更新弹窗中的 button，模拟一次手动点击
            manager.defaultDialog.findViewById&amp;lt;Button&amp;gt;(com.azhon.appupdate.R.id.btn_update)
                .performClick()
        }

    }


    /**
     * 主动关闭 更新弹窗
     */
    fun dismissUpdateDialog() {
        if (updateDialog != null &amp;amp;&amp;amp; updateDialog.isShowing) {
            updateDialog.cancel()
            Log.i(&quot;lq_&quot;, &quot;dismissDialog:  关闭 &quot;)
        } else {
            Log.i(&quot;lq_&quot;, &quot;dismissDialog:  null &quot;)
        }
    }

}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
public class AppInstallReceiver extends BroadcastReceiver {

    public static final String TAG = &quot;lq_AppUnInstallReceiver&quot;;

    @Override
    public void onReceive(Context context, Intent intent) {

        String packageName = intent.getData().getSchemeSpecificPart();

        if (Intent.ACTION_PACKAGE_ADDED.equals(intent.getAction())) {

            Toast.makeText(context, &quot;有应用被添加&quot;, Toast.LENGTH_LONG).show();

            //com.estrongs.android.pop 为 ES文件浏览器的包名
            if ((&quot;com.estrongs.android.pop&quot;).equals(packageName)) {
                //监测到ES文件浏览器 安装了版本
                Log.i(TAG, &quot;onReceive: 监测到ES文件浏览器 安装了版本  &quot;);
                AppUpdateUtils.INSTANCE.dismissUpdateDialog();
            }

        } else if (Intent.ACTION_PACKAGE_REPLACED.equals(intent.getAction())) {

//            Toast.makeText(context, &quot;有应用被替换&quot;, Toast.LENGTH_LONG).show();
//
//            if ((&quot;com.estrongs.android.pop&quot;).equals(packageName)) {
//                //监测到ES文件浏览器 安装了新的版本
//                Log.i(TAG, &quot;onReceive: 监测到ES文件浏览器 安装了新的版本  &quot;);
//                AppUpdateUtils.INSTANCE.dismissUpdateDialog();
//            }
        }
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2020/12/android_appupdate/&quot;&gt; Android 关于使用 azhon/AppUpdate 的一点想法 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Dec 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/12/android_appupdate/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/12/android_appupdate/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>局域网内组网通讯的实现</title>
        <description>&lt;h3 id=&quot;他是一个现实到不能再现实却又与现实格格不入的矛盾体&quot;&gt;他是一个现实到不能再现实却又与现实格格不入的矛盾体。&lt;/h3&gt;

&lt;h1 id=&quot;websocket--局域网内组网通讯实现&quot;&gt;WebSocket  局域网内组网通讯实现&lt;/h1&gt;

&lt;p&gt;收到需求：我们有一个教师用的app移动授课端，还有一个学生用来学习与上课的app学生端，现需要实现局域网下教师Pad控制学生Pad，教师端给学生端发送指令，学生端去响应，简单概括即局域网下的一对多通信。&lt;/p&gt;

&lt;p&gt;本程序代码 &lt;a href=&quot;https://github.com/yuqianglianshou/WebSocket&quot;&gt;https://github.com/yuqianglianshou/WebSocket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;注：本程序的核心代码来自 &lt;a href=&quot;https://github.com/szuwest/Recorder&quot;&gt;https://github.com/szuwest/Recorder&lt;/a&gt; 这位作者，请给他掌声。&lt;/p&gt;

&lt;p&gt;我在他的基础上完善了些功能，增加了详细的注释，修改了一些bug。下面我给出这个项目完整的解释说明。&lt;/p&gt;

&lt;p&gt;需解决的两个核心问题：&lt;br /&gt;
1，局域网内的设备如何互相发现得到对方的ip地址？&lt;br /&gt;
2，如何建立连接维护连接？&lt;/p&gt;

&lt;p&gt;原作者项目说明：
最近在做一个应用，需要多个手机一起组网，一个充当主机，其他多个手机充当从机。主机跟每个从机之间可以相互通信，发送消息和文件。这不就是个CS（client-server）模式吗，只不过server不是在云端，只是在同一个局域网的手机上罢了。&lt;/p&gt;

&lt;p&gt;这里面有两个关键的地方，一个是如何发现同一个局域网内的手机客户端，包括自建的热点，一个是知道各个手机的Ip地址后，用什么方式来建立通信。这里说一下热点，手机开启热点之后，别的手机连上这个特点，其实也是一个小型局域网，只不过这个局域网稍微有点不一样（Ip地址），其他的都一样。&lt;/p&gt;

&lt;p&gt;局域网发现 局域网发现主要难点在于如何得到对方Ip地址。我们的做法是发送UDP包。UDP协议是无面向连接的，也就是不需要像TCP协议那样提前建立连接。所以我们向局域网内某一个特定的端口广播UDP包，接收到这个包的人，发送回包，那么我们就知道彼此的存在和地址。&lt;/p&gt;

&lt;p&gt;那么关键地方是&lt;/p&gt;

&lt;p&gt;有人一直在监听一个端口X，接收UDP包 有人在一直往这个端口X发送UDP包 监听端的人收到了UDP包后，就知道了发送者的Ip地址。但这时发送者是不知道接收者的，因为这是UDP包，无连接的状态的。那怎么做才让发送者也知道了。其实只要发过来再做一次就行。发送者同时也是监听者，这就行了。不过发送者A监听的是另一个端口Y，接收者B接收到包后，发送一个Y端口的包给A就行了。&lt;/p&gt;

&lt;p&gt;总结起来：&lt;/p&gt;

&lt;p&gt;主机监听端口X，一直发送Y端口的广播UDP包 从机监听端口Y，接收到UDP包后，往X端口发送UDP包。 这样就能双方知道对方的Ip地址了。发送的数据包也可以很讲究，例如发送json数据，可以自己定义一些字段，当接收者收到之后，解析数据，如果不符合规则的数据包直接丢弃掉。这就可以支撑一些业务逻辑了。&lt;/p&gt;

&lt;p&gt;广播地址&lt;/p&gt;

&lt;p&gt;广播地址是什么呢，一般都是用255.255.255.255，也有不用广播用组播地址例如192.168.43.255.这个组播地址就是热点的时候采用的地址，因为开启热点之后，那个手机的IP地址是固定的，是192.168.43.1其他端的手机都是这个地址后面的192.168.43.X。如果广播发送不了或者被禁掉了？一般来说还有一种方法，就是子网掩码里面的所有Ip地址遍历发一遍，这也是办法之一。&lt;/p&gt;

&lt;p&gt;一对多的通信 当知道对方的Ip地址后，一切都好办了。端对端的通信有挺多方法，一对多的通信也不少。如果要同时考虑在Android和iOS都好实现的话，其实可选的不是很多。&lt;/p&gt;

&lt;p&gt;最保守的方法就是直接采用TCP协议建立sock来通信。在iOS端和Android端都有很好的socket库，不用担心能不能实现和兼容性问题。这个方案挺好但是缺点也明显，因为sock通信只定义了最基础的，消息格式要完全自己定制和实现，还多心跳之类的，这里的工作量还不少。也许还有少的框架实现了这些，但是要同时在iOS端和安卓端都有实现，我还真不知道有哪些。而且我的情景里最重要的是有一个主机在里面，所有的从机都跟主机通信，所以必须说要有一个server。&lt;/p&gt;

&lt;p&gt;我后来采用的的WebSocket来实现。WebSocket在Android上有很多库，不过大多数都是client端的,包括了server端的有AndroidAsync,Java-Websocket。我采用的是AndroidAysnc。而iOS端可选择的就更少了。我在github上找了很多库，都是只支持client的，有支持server的都是很久很老的项目，找到一个采用swift写的叫Telegraph库，试用了起来，这个库实现得不是很好，有挺多问题，不尽如意。最终现在iOS端只有采用了Facebook的SocketRocket来作为client端，server端暂时没有好的实现。&lt;/p&gt;

&lt;p&gt;采用WebSocket来实现双向通信有不少好处，例如它直接支持发送字符串消息，二进制数据（文件），还有连接上和断开都有相应的事件，还有ping-pong这种心跳机制，我觉得挺好的。iOS端的WebSocket server暂时没有找到可靠的第三方实现，比较遗憾。&lt;/p&gt;

&lt;p&gt;上面是原作者的说明，表达明确，我再补充两句：&lt;br /&gt;
1，关于手机热点的功能我未验证，项目中代码有保留。&lt;br /&gt;
2，发送接收文件未验证，项目中代码有保留。&lt;br /&gt;
3，原作者将客户端和服务端代码放在了一个app里，我拆分成了两个app，即项目中有两个moudle，client和server，两台设备一台安装一端即可。&lt;br /&gt;
4，经测试，主机开启连接，客户端开启连接，不出意外5秒内两边连接，页面有连接信息显示，开启的顺序不分先后，都行，主机会一直搜索设备，其他从机都可连接，从机在连接后会关闭本机的搜索。&lt;br /&gt;
5，主机每隔5秒发送一次广播信息，用以搜索设备，这个5秒的时间可在程序中修改。可连接从机数量上限可定，项目中写死80台，原则上无上限，当连接数达到数量上限时，主机将拒绝接收从机连接请求。&lt;br /&gt;
6，经测试，多台从机同时连接主机没有问题。主机发消息会循环（保存了从机连接的）list，分别发送，从机都能收到消息，这里也可以只针对某一台从机发送消息，加判断即可。多台从机发消息主机都能收到。 &lt;br /&gt;
7，本文以及程序中出现的主机，教师端，服务端是一个意思。从机，学生端，客户端是一个意思。&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
关键步骤截图如下：
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;主机，从机运行程序：
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/android_websocket/socket1.jpeg&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
主机，从机开启连接
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/android_websocket/socket2.jpeg&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
主机，从机分别给对方发送了一条消息 &lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/android_websocket/socket3.jpeg&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
从机后台日志显示
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/android_websocket/socket4.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
以上亲测可用。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2020/11/android_websocket/&quot;&gt; 局域网内组网通讯的实现 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Nov 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/11/android_websocket/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/11/android_websocket/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>读 《遥远的救世主》</title>
        <description>&lt;h3 id=&quot;他是一个现实到不能再现实却又与现实格格不入的矛盾体&quot;&gt;他是一个现实到不能再现实却又与现实格格不入的矛盾体。&lt;/h3&gt;

&lt;p&gt;听《Daughter of heaven》(天国的女儿)听了好久好久，那种忧伤沁入我心，空荡荡的房子里，回荡着我的伤感，此时的我似乎在等待着什么，似乎有什么期冀。&lt;/p&gt;

&lt;p&gt;这是一部不太 入流 的书，说他不入流是因为主人公丁元英对世俗传统的看法已经不能让大部分人理解，我且称为异类。&lt;/p&gt;

&lt;p&gt;丁元英这个角色，过分的理性，独到的眼光，缜密的思维，与母亲谈论母爱无私与养儿防老的矛盾之处，与哥哥说要拔了父亲的管子，放弃治疗父亲的坦然，这里所表现出来的理性会被大多数人解读为无情，因此，这一开篇估计就吓退了不少人。&lt;/p&gt;

&lt;p&gt;书中对于他是如何成功的描述甚少，对于他宅在家里干什么也提及甚少。他是一个隐藏的很好的有钱人，他并不是在家里玩游戏看小说。如果这两点不具备的话，不要打着向他学习的幌子去做事。&lt;/p&gt;

&lt;p&gt;没有经济基础是很难做到他那样的，不要让他误导了我们这些自以为超级理性的人，会被骂死的。&lt;/p&gt;

&lt;p&gt;仔细分析的话书中每个人物都有着自己的算盘，人物之间互为棋子，不可深究，对不起空灵的 音乐。&lt;/p&gt;

&lt;p&gt;电视剧《天道》对原著修改很少，只是结尾对于女主的死因做了一些和谐处理，看电视剧视觉效果更好一些。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;自嘲&lt;/p&gt;

&lt;p&gt;本是后山人，偶作前堂客。&lt;/p&gt;

&lt;p&gt;醉舞经阁半卷书,坐井说天阔。&lt;/p&gt;

&lt;p&gt;大志戏功名,海斗量福祸。&lt;/p&gt;

&lt;p&gt;论到囊中羞涩时,怒指乾坤错。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;天黑了，我很忧愁。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2020/10/read_tiandao/&quot;&gt; 读 《遥远的救世主》 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/10/read_tiandao/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/10/read_tiandao/</guid>
        
        <category>人生</category>
        
        
      </item>
    
      <item>
        <title>Android 图片放错位置无所谓？</title>
        <description>&lt;h3 id=&quot;孤独是生命的本质不是你的本质&quot;&gt;孤独是生命的本质，不，是你的本质。&lt;/h3&gt;

&lt;p&gt;我曾今写过这个问题：
&lt;strong&gt;&lt;em&gt;图片放错目录会产生的问题吗？&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
并给出了（摘抄了）如下答案:&lt;br /&gt;
这一点可能很多人都不会注意，觉得只要往一个drawable目录中放了需要的资源就好了。而我们可以自己做一个简单的测试，把同一个图片资源放在不同的dpi目录，会发现它们使用的内存是不一样的。简单说就是高密度（density）的系统去使用低密度目录下的图片资源时，会将图片长宽自动放大以去适应高密度的精度，当然图片占用的内存会更大。&lt;/p&gt;

&lt;p&gt;所以如果能提各种dpi的对应资源那是最好，可以达到较好内存使用效果。如果提供的图片资源有限，那么图片资源应该尽量放在高密度文件夹下，这样可以节省图片的内存开支。&lt;br /&gt;
其实多年来我也并未当回事，今天我来验证一下到底有多大影响？！&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;新建项目。&lt;/li&gt;
  &lt;li&gt;准备一张图片,大小为 889*1080 311.83kB,分别放入如下5个drawable目录，取名与之对应，如下图所示&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawable1.png&quot; alt=&quot;&quot; /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;在布局文件中以背景使用此图片，第一次使用drawable目录下的图，如下图 &lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawable2.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;运行程序，打开Profiler,看下内存使用情况，如下图： &lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawable3.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;更改布局背景使用的图片，这次使用drawable_hdpi,再次运行观看内存使用情况&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawableh.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;drawable_xhdpi&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawablexh.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;drawable_xxhdpi&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawablexxh.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;drawable_xxxhdpi&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/images/posts/drawable_lacation/drawablexxxh.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;整理数据如下：&lt;/em&gt;&lt;/strong&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;目录&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Total(MB)&lt;/th&gt;
      &lt;th&gt;Graphics(MB)&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;drawable&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;99.6&lt;/td&gt;
      &lt;td&gt;43.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;drawable-hdpi&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;93.8&lt;/td&gt;
      &lt;td&gt;40.1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;drawable-xhdpi&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;72.4&lt;/td&gt;
      &lt;td&gt;29.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;drawable-xxhdpi&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;78.2&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;drawable-xxxhdpi&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;59.1&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;另外发现了一个问题，相同的程序每次运行，Profiler 中显示的内存使用情况是不同的，有时差别甚至很大，所以，以上数据仅供参考。&lt;/p&gt;

&lt;p&gt;最终结果：这张不是很大的图片如果放错目录，多则影响到了近20M的内存，所以如果图片很大或者很多，内存影响还是不容小觑的，正确的开发习惯很重要。
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2020/05/android_drawable/&quot;&gt; Android 图片放错位置无所谓？ &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 03 May 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/05/android_drawable/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/android_drawable/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>Android 文字点阵图的水波纹动画</title>
        <description>&lt;h3 id=&quot;我总想在宇宙中寻求意义他却不予以理睬&quot;&gt;我总想在宇宙中寻求意义，他却不予以理睬。&lt;/h3&gt;

&lt;p&gt;demo地址 ：
 &lt;a href=&quot;https://github.com/yuqianglianshou/WenziKong&quot;&gt;https://github.com/yuqianglianshou/WenziKong&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;文字水波纹效果&lt;/li&gt;
  &lt;li&gt;原理：文字生成点阵图，计算文字位置（点阵）集合，draw圆环，每个圆环半径以0开始递增，透明度以255开始递减，颜色随机，每一次刷新半径扩大一点，&lt;/li&gt;
  &lt;li&gt;透明度降低一些，当透明度为0时，集合中删除点，集合为空时停止刷新，动画停止。&lt;/li&gt;
  &lt;li&gt;所涉及的知识点：自定义view；文字点阵数据；lifecycles使用；handler处理；动画计算，位置计算等。&lt;/li&gt;
  &lt;li&gt;效果：运行程序文字依次随机位置以水波纹动画显示，触摸或滑动屏幕，有水波纹动画，程序退到后台，动画暂停，返回到前台继续执行，效果如下：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;img src=&quot;/images/posts/wenzikong/wenzikong.gif&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt; 
&lt;img src=&quot;/images/posts/wenzikong/wenzikong2.gif&quot; alt=&quot;&quot; /&gt;
 &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2020/03/wenzikong/&quot;&gt; Android 文字点阵图的水波纹动画 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Mar 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/03/wenzikong/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/03/wenzikong/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>Android Jetpack 组件开发 初识</title>
        <description>&lt;h3 id=&quot;敢于逆行目光笃定&quot;&gt;敢于逆行，目光笃定。&lt;/h3&gt;

&lt;p&gt;Android Jetpack 组件开发： 
 &lt;a href=&quot;https://developer.android.google.cn/jetpack/&quot;&gt;https://developer.android.google.cn/jetpack/&lt;/a&gt; &lt;br /&gt;
 视频学习自bilibili： &lt;a href=&quot;https://www.bilibili.com/video/av50954019?p=1&quot;&gt;https://www.bilibili.com/video/av50954019?p=1&lt;/a&gt;&lt;br /&gt;
 第一部分已经完成： 初识mvvm+livedata+databinding,在compare包下，以功能相同的四个activity由mvc过度到mvvm模式，使用livedata，使用databinding。  第二部分已经完成： lifecycles 定时器，在lifecycles包下。 
 demo地址&lt;a href=&quot;https://github.com/yuqianglianshou/JetpackDeom/&quot;&gt;https://github.com/yuqianglianshou/JetpackDeom/&lt;/a&gt;&lt;br /&gt;
 有详细注释
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src=&quot;/images/posts/jetpack/1.png&quot; alt=&quot;&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
未完待续。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2020/03/jetpack/&quot;&gt; Android Jetpack 组件开发 初识 &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Mar 2020 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2020/03/jetpack/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/03/jetpack/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>什么样的男生注定单身？</title>
        <description>&lt;h3 id=&quot;背过了下列语句成为文艺青年感情咨询师的路不远了&quot;&gt;背过了下列语句，成为文艺青年感情咨询师的路不远了&lt;/h3&gt;

&lt;h2 id=&quot;下面文章总结于知乎问题-什么样的男生注定单身-的部分回答大部分人或多或少都能找到自己的影子不必惊慌70以后还有希望&quot;&gt;下面文章总结于知乎问题 什么样的男生注定单身 的部分回答，大部分人或多或少都能找到自己的影子，不必惊慌，70以后还有希望。&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;目测条件一般，有自己的想法和见地，看过一些书，情商也不低，不会显得急不可待，语出惊人。看上去介于单调和闷之间，但内心怀有强烈的情感。一般不会显得浮躁，在熟人面前幽默感爆棚，在陌生人面前不会特意表现自己，但跟女生一说话，就有种难以掩饰的微尬和不自然。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不会帅得在人群中引起骚动，也不会丑得让人扭头就走，看上去就不太像个有故事的人。可能穿得比较干净，但一定不潮，内心深处，想摆脱肤浅，容易自省，跟大家吐槽的俗low男不沾边，动不动容易觉得特别。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不擅长KTV，篮球，可能会喜欢跑步，看书，思想逻辑类的事物，但优点都不具备那种直观可展示性，常常沦为大型聚会的配角，但也不会夸张的卖弄自己。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;内心戏很丰富，对所追求的爱情，脑海中有一幅自己的想象蓝图。没事不会主动找女生，对有感觉的女生，在微信聊天中对用到的表情包，标点，波浪线都有思考，并且使之尽量看起来装作随性自然，不敢喋喋不休地打扰，很怕被嫌弃，越界，导致很少产生亲密关系。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在精神和道德上容易自我感觉良好，常常要用尊严掩饰自卑，学不会不要脸，无法像舔狗一样存活，但生活也没给他一个机会来检验自己是不是舔狗。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对感情上有洁癖，对爱情本身的向往超过爱一个具体的人，内心多年保持一种在精神层面对美好事物的追求，不想随便找一个女朋友破坏了自己内心多年来对爱情的想象。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;看着青春气数已尽，在岁月狂奔的途中，有情人结成眷侣的背景下，会回过头来观察自己，发现自己一直是孤家寡人，而别人一不小心已经有了前前任了。会冷静或者极度失望地对自己挑刺，容易感到气馁无望，进一步增长对情感和未来的焦虑和渴求。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;工作和生活以及爱好，稳定得像一潭死水，生活中连公车时刻表都难得出错，更不会有意外的人事出现打破你的生活轨迹，难有一个可撬动的点来系统的改变些什么，感情空白或者一直处于空白状态是大几率事件。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;明明没什么情感经历，生活也平淡如水，但随着年龄渐长，不知不觉熬出了身心的沧桑感。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;颜值家境不突出，但也过得去，却总有些自卑，与异性相处中不够自信。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;不主动，即使遇到心动的人，却总会自己找理由退缩，不敢表白。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;心思细腻，过分在意周围人的感受，常常忽略自己迁就别人。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;成长在不够开放的环境中，常常被老师长辈的告诫不要早恋，以至于心理戴了“枷锁”。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;心里对周围人“过分苛责”，周围人身上互相无视的小缺点、小瑕疵却总是被自己在意到，而又闷在心中不说。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过于正直，不愿轻易踏入恋情，无法强迫自己浪费他人情感、时间、精力。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;内心过于丰富，常常把异性对自己的态度过分解读，患得患失。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;过于友善，和所有人都有着距离感，有礼貌，客客气气，但仿佛与他人之间有一条线，越过后略微不适。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对世界有自己的见解，看透许多却不说透，时常与世俗看法格格不入，心态在出世入世间徘徊。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;常年容易装作不屑，也容易孤单，在生活中一点一点被动妥协后，容易失去存在感，容易漫不经心，在皆随他去和求而不得中，平静如日，不出意外的话可以一举单身到70岁。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;欢迎投稿，写上感悟，注明昵称。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;生命没息，更新不能止。缓慢更新中。。。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2019/12/psychology/&quot;&gt;  什么样的男生注定单身？  &lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/12/psychology/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/12/psychology/</guid>
        
        <category>个人</category>
        
        
      </item>
    
      <item>
        <title>网站开发_tomcat运行</title>
        <description>&lt;h3 id=&quot;每个优秀的人都有一段沉默的时光-那段时光是付出了很多努力却得不到结果的日子我们把它叫作扎根&quot;&gt;每个优秀的人，都有一段沉默的时光。 那段时光，是付出了很多努力，却得不到结果的日子，我们把它叫作扎根。&lt;/h3&gt;

&lt;h2 id=&quot;一本地tomcat安装mac为例&quot;&gt;一，本地tomcat安装（mac为例）&lt;/h2&gt;
&lt;p&gt;请参考&lt;a href=&quot;https://www.jianshu.com/p/db08d23049ce&quot;&gt;Mac 下安装Tomcat&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;二本地tomcat运行war包&quot;&gt;二，本地tomcat运行war包&lt;/h2&gt;
&lt;p&gt;将上篇文章中打好的sf-1.0.war复制到tomcat安装目录webapps下，然后重新启动tomcat，
&lt;img src=&quot;/images/posts/websitedev/15.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;br /&gt;
输入访问地址 http://localhost:8080/sf-1.0/test/hello ,成功后的样子&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/16.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;三服务器部署&quot;&gt;三，服务器部署&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;服务器购买&lt;br /&gt;
&lt;a href=&quot;https://yq.aliyun.com/articles/280838&quot;&gt;阿里云服务器的购买操作流程&lt;/a&gt;&lt;br /&gt;
如果仅仅只是写几个接口玩的话，买最低配1核1G的就行，至于按流量付费还是包月包年自行选择，不得不说，真心贵啊，注意一些优惠信息，可以便宜很多很多。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建ECS实例&lt;br /&gt;
&lt;a href=&quot;https://help.aliyun.com/document_detail/25424.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ForkLift 链接服务器 &lt;br /&gt;
ForkLift 是一款mac上专业的文件管理程序，我用它进行ftp链接，用了十几年的Windows，还是看到图形界面比较安心，详细介绍看知乎文章&lt;a href=&quot;https://zhuanlan.zhihu.com/p/89461946&quot;&gt;Mac用户必备的FTP客户端&lt;/a&gt;，通过ECS实例地址和密码登陆到远程服务器，
&lt;img src=&quot;/images/posts/websitedev/17.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;服务器安装jdk和tomcat&lt;br /&gt;
在下面的操作之前，你需要有些Linux知识储备，请看&lt;a href=&quot;https://github.com/Snailclimb/JavaGuide/blob/master/docs/operating-system/%E5%90%8E%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E7%9A%84Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md&quot;&gt;后端程序员必备的Linux基础知识&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;打开终端，通过命令 ssh root@服务器地址 ，链接服务器，下图登陆成功
&lt;img src=&quot;/images/posts/websitedev/18.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据上面储备的知识，分别将本地的jdk和tomcat安装包上传到服务器，然后解压，通过 ForkLift 看下成果。
&lt;img src=&quot;/images/posts/websitedev/19.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;配置jdk环境变量&lt;br /&gt;
&lt;a href=&quot;https://www.jianshu.com/p/32575e8919f0&quot;&gt;Linux服务器配置之JDK安装篇&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;服务器启动 tomcat，下图启动成功。
&lt;img src=&quot;/images/posts/websitedev/20.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt; 
浏览器验证： http://你的服务器地址:8080/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;部署&lt;br /&gt;
可以在ForkLift工具上直接将war包拖上去，图中我的war包改了名字，然后重新启动tomcat，
&lt;img src=&quot;/images/posts/websitedev/21.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt; 
浏览器验证： http://你的服务器地址:8080/demo/test/hello，看下我的成果 &lt;a href=&quot;http://47.105.132.88:8080/demo/test/hello&quot;&gt;http://47.105.132.88:8080/demo/test/hello&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;至此一个-hello-world-接口完成了不想总结了睡了&quot;&gt;至此，一个 hello World 接口完成了。不想总结了，睡了。&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2019/12/website-development_3/&quot;&gt; 网站开发_tomcat运行  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/12/website-development_3/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/12/website-development_3/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>网站开发_打war包</title>
        <description>&lt;h3 id=&quot;没有谁会为你踏雪而来喜欢的风景要自己去看&quot;&gt;没有谁会为你踏雪而来，喜欢的风景要自己去看。&lt;/h3&gt;

&lt;h2 id=&quot;demo样例&quot;&gt;demo样例:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/yuqianglianshou/WebsiteDemo&quot;&gt;https://github.com/yuqianglianshou/WebsiteDemo&lt;/a&gt;&lt;br /&gt;
初建的SpringBoot项目部署到外部Tomcat中的需要做的修改：&lt;br /&gt;
&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-traditional-deployment&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;启动类修改:&lt;br /&gt;
继承 org.springframework.boot.web.servlet.support 包下的 SpringBootServletInitializer并覆盖configure方法，config 方法中return值修改为 builder.sources(启动类.class)，在这里，我的项目名字是 sf ，新建项目后会自动生成 SfApplication 启动类。
&lt;img src=&quot;/images/posts/websitedev/9.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改打包方式：&lt;br /&gt;
pom.xml 文件中，packaging标签下的 jar 修改为 war，如3图。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;dependencies 标签下添加tomcat依赖，排除嵌入式tomcat
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!--        添加依赖 tomcat--&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-tomcat&amp;lt;/artifactId&amp;gt;
        &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
    &amp;lt;/dependency&amp;gt;
&amp;lt;!--        排除嵌入式tomcat--&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
        &amp;lt;exclusions&amp;gt;
            &amp;lt;exclusion&amp;gt;
                &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;spring-boot-starter-tomcat&amp;lt;/artifactId&amp;gt;
            &amp;lt;/exclusion&amp;gt;
        &amp;lt;/exclusions&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/images/posts/websitedev/10.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;注释spring-boot-maven-plugin，使用maven-war-plugin
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;failOnMissingWebXml&amp;gt;false&amp;lt;/failOnMissingWebXml&amp;gt;
            &amp;lt;/configuration&amp;gt;
        &amp;lt;/plugin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;/images/posts/websitedev/11.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;修改完成，打开右侧 Maven ，双击package 打包，运行成功后，项目中target包下生成war包。如图：&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/12.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Maven 不熟悉的可以通过下面地址了解一下&lt;br /&gt;
&lt;a href=&quot;https://www.yuque.com/wells/engineering/vcki6k&quot;&gt;https://www.yuque.com/wells/engineering/vcki6k&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/websitedev/13.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2019/12/website-development_2/&quot;&gt; 网站开发_打war包  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/12/website-development_2/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/12/website-development_2/</guid>
        
        <category>技术</category>
        
        
      </item>
    
      <item>
        <title>网站开发_项目创建</title>
        <description>&lt;h3 id=&quot;如果没有躺赢的命-那就站起来跑&quot;&gt;如果没有躺赢的命 那就站起来跑。&lt;/h3&gt;
&lt;h2 id=&quot;demo样例&quot;&gt;demo样例:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/yuqianglianshou/WebsiteDemo&quot;&gt;https://github.com/yuqianglianshou/WebsiteDemo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;开发工具使用IntelliJ IDEA,官方下载地址
&lt;a href=&quot;https://www.jetbrains.com/idea/download/#section=mac&quot;&gt;https://www.jetbrains.com/idea/download/#section=mac&lt;/a&gt; ,
分为 Ultimate 和 Community 版，&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/1.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Community是免费的但是是阉割版，创建不了web项目的，但是 Ultimate 版很贵！下面这个地址绝对良心，亲测有效，破解方法跟随idea版本走的，这意味着我们可以使用最新版本的idea
&lt;a href=&quot;https://www.jiweichengzhu.com/article/2940ed65c94f4671ae3f3aa72e168673&quot;&gt;https://www.jiweichengzhu.com/article/2940ed65c94f4671ae3f3aa72e168673&lt;/a&gt;,
还是那句话，如果经济允许，建议购买正版。&lt;/p&gt;

&lt;h2 id=&quot;项目创建&quot;&gt;项目创建：&lt;/h2&gt;
&lt;p&gt;打开Idea，file -&amp;gt; new -&amp;gt; project，弹窗如下图&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/2.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择Spring Initializr,然后右下角Next，弹窗如下图&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/3.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Group 和 Artifact 组合起来就是包名,即最下行Package，自行命名。弹窗如下图&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/4.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择 Web ,勾选下面的 Spring Web ,可以看到这个窗口里有大量的可选择选项，我是真不知都干什么用的。。。然后右下角Next，弹窗如下图&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/5.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;填写项目名字和位置，点击finish，一个 Spring Boot 项目初步建成。&lt;br /&gt;
写一个测试类，不多说，如下：&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/6.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;指定一下程序端口号，默认为8080，这里修改为8333，目的是为了一会本地部署tomcat启动时不与之冲突，如下：&lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/7.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击idea右上绿色小箭头，运行程序，然后浏览器输入 http://localhost:8333/test/hello ，如下 &lt;br /&gt;
&lt;img src=&quot;/images/posts/websitedev/8.png&quot; alt=&quot;&quot; width=&quot;60%&quot; height=&quot;60%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
转载请注明：&lt;a href=&quot;http://yuqianglianshou.com&quot;&gt;劉清揚的博客&lt;/a&gt; » &lt;a href=&quot;http://yuqianglianshou.com/2019/12/website-development_1/&quot;&gt; 网站开发_项目创建  &lt;/a&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2019 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2019/12/website-development_1/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/12/website-development_1/</guid>
        
        <category>技术</category>
        
        
      </item>
    
  </channel>
</rss>
